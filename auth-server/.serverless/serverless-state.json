{
  "service": {
    "service": "meet-auth-server",
    "serviceObject": {
      "name": "meet-auth-server"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "dev",
      "environment": {
        "CLIENT_ID": "37793522792-g0r3sqnieskaidj3uapjcorr6lo556u9.apps.googleusercontent.com",
        "CLIENT_SECRET": "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",
        "REDIRECT_URI": "https://meet-app-smoky-two.vercel.app",
        "CALENDAR_ID": "fullstackwebdev@careerfoundry.com"
      },
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "*"
          ],
          "allowedHeaders": [
            "Content-Type"
          ],
          "allowedMethods": [
            "GET",
            "OPTIONS"
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetAuthURLLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/meet-auth-server-dev-getAuthURL"
            }
          },
          "GetAccessTokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/meet-auth-server-dev-getAccessToken"
            }
          },
          "GetCalendarEventsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/meet-auth-server-dev-getCalendarEvents"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "meet-auth-server",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/meet-auth-server-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/meet-auth-server-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "meet-auth-server",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetAuthURLLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-0601d962-7377",
                "S3Key": "serverless/meet-auth-server/dev/1756048838518-2025-08-24T15:20:38.518Z/meet-auth-server.zip"
              },
              "Handler": "handler.getAuthURL",
              "Runtime": "nodejs18.x",
              "FunctionName": "meet-auth-server-dev-getAuthURL",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "37793522792-g0r3sqnieskaidj3uapjcorr6lo556u9.apps.googleusercontent.com",
                  "CLIENT_SECRET": "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",
                  "REDIRECT_URI": "https://meet-app-smoky-two.vercel.app",
                  "CALENDAR_ID": "fullstackwebdev@careerfoundry.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAuthURLLogGroup"
            ]
          },
          "GetAccessTokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-0601d962-7377",
                "S3Key": "serverless/meet-auth-server/dev/1756048838518-2025-08-24T15:20:38.518Z/meet-auth-server.zip"
              },
              "Handler": "handler.getAccessToken",
              "Runtime": "nodejs18.x",
              "FunctionName": "meet-auth-server-dev-getAccessToken",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "37793522792-g0r3sqnieskaidj3uapjcorr6lo556u9.apps.googleusercontent.com",
                  "CLIENT_SECRET": "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",
                  "REDIRECT_URI": "https://meet-app-smoky-two.vercel.app",
                  "CALENDAR_ID": "fullstackwebdev@careerfoundry.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAccessTokenLogGroup"
            ]
          },
          "GetCalendarEventsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-0601d962-7377",
                "S3Key": "serverless/meet-auth-server/dev/1756048838518-2025-08-24T15:20:38.518Z/meet-auth-server.zip"
              },
              "Handler": "handler.getCalendarEvents",
              "Runtime": "nodejs18.x",
              "FunctionName": "meet-auth-server-dev-getCalendarEvents",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "37793522792-g0r3sqnieskaidj3uapjcorr6lo556u9.apps.googleusercontent.com",
                  "CLIENT_SECRET": "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",
                  "REDIRECT_URI": "https://meet-app-smoky-two.vercel.app",
                  "CALENDAR_ID": "fullstackwebdev@careerfoundry.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetCalendarEventsLogGroup"
            ]
          },
          "GetAuthURLLambdaVersiond4B6VHLIEsSxArmIaQena8BCI3p64sEPjISrLAt75ZI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAuthURLLambdaFunction"
              },
              "CodeSha256": "LWZBMNsTvEgw6czR8+Htypeuip0f+ieKRRofkiSx55Q="
            }
          },
          "GetAccessTokenLambdaVersion70Smcv4XjMGGr1f1kS5pmUiC9mH0tdqu0KxJMJ6wY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAccessTokenLambdaFunction"
              },
              "CodeSha256": "LWZBMNsTvEgw6czR8+Htypeuip0f+ieKRRofkiSx55Q="
            }
          },
          "GetCalendarEventsLambdaVersionID4x51LSbF43Q97k6kI9RC2yhYjlGCEEF4s4p4WU270": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetCalendarEventsLambdaFunction"
              },
              "CodeSha256": "LWZBMNsTvEgw6czR8+Htypeuip0f+ieKRRofkiSx55Q="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-meet-auth-server",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type"
                ],
                "AllowMethods": [
                  "GET",
                  "OPTIONS"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetAuthURLLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAuthURLLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAuthURL": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAuthURLLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiGetDashauthDashurl": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/get-auth-url",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAuthURL"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAuthURL"
          },
          "GetAccessTokenLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAccessTokenLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAccessToken": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAccessTokenLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiTokenCodeVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/token/{code+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAccessToken"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAccessToken"
          },
          "HttpApiRouteGetApiToken": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/token",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAccessToken"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAccessToken"
          },
          "GetCalendarEventsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetCalendarEventsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetCalendarEvents": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetCalendarEventsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetApiGetDasheventsAccesstokenVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/get-events/{access_token+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetCalendarEvents"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetCalendarEvents"
          },
          "HttpApiRouteGetApiGetDashevents": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /api/get-events",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetCalendarEvents"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetCalendarEvents"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-0601d962-7377",
            "Export": {
              "Name": "sls-meet-auth-server-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetAuthURLLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAuthURLLambdaVersiond4B6VHLIEsSxArmIaQena8BCI3p64sEPjISrLAt75ZI"
            },
            "Export": {
              "Name": "sls-meet-auth-server-dev-GetAuthURLLambdaFunctionQualifiedArn"
            }
          },
          "GetAccessTokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAccessTokenLambdaVersion70Smcv4XjMGGr1f1kS5pmUiC9mH0tdqu0KxJMJ6wY"
            },
            "Export": {
              "Name": "sls-meet-auth-server-dev-GetAccessTokenLambdaFunctionQualifiedArn"
            }
          },
          "GetCalendarEventsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetCalendarEventsLambdaVersionID4x51LSbF43Q97k6kI9RC2yhYjlGCEEF4s4p4WU270"
            },
            "Export": {
              "Name": "sls-meet-auth-server-dev-GetCalendarEventsLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-meet-auth-server-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-meet-auth-server-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [],
    "pluginsData": {},
    "functions": {
      "getAuthURL": {
        "handler": "handler.getAuthURL",
        "events": [
          {
            "httpApi": {
              "path": "/api/get-auth-url",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/get-auth-url"
          }
        ],
        "name": "meet-auth-server-dev-getAuthURL",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetAuthURLLambdaVersiond4B6VHLIEsSxArmIaQena8BCI3p64sEPjISrLAt75ZI"
      },
      "getAccessToken": {
        "handler": "handler.getAccessToken",
        "events": [
          {
            "httpApi": {
              "path": "/api/token/{code+}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/token/{code+}"
          },
          {
            "httpApi": {
              "path": "/api/token",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/token"
          }
        ],
        "name": "meet-auth-server-dev-getAccessToken",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetAccessTokenLambdaVersion70Smcv4XjMGGr1f1kS5pmUiC9mH0tdqu0KxJMJ6wY"
      },
      "getCalendarEvents": {
        "handler": "handler.getCalendarEvents",
        "events": [
          {
            "httpApi": {
              "path": "/api/get-events/{access_token+}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/get-events/{access_token+}"
          },
          {
            "httpApi": {
              "path": "/api/get-events",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/api/get-events"
          }
        ],
        "name": "meet-auth-server-dev-getCalendarEvents",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetCalendarEventsLambdaVersionID4x51LSbF43Q97k6kI9RC2yhYjlGCEEF4s4p4WU270"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "meet-auth-server",
      "frameworkVersion": "4",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": false,
        "artifactsS3KeyDirname": "serverless/meet-auth-server/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-0601d962-7377",
        "artifact": "C:\\www\\meet\\auth-server\\.serverless\\meet-auth-server.zip",
        "artifactDirectoryName": "serverless/meet-auth-server/dev/1756048838518-2025-08-24T15:20:38.518Z"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "C:\\www\\meet\\auth-server\\.serverless\\meet-auth-server.zip"
  },
  "package": {
    "individually": false,
    "artifactDirectoryName": "serverless/meet-auth-server/dev/1756048838518-2025-08-24T15:20:38.518Z",
    "artifact": "meet-auth-server.zip"
  }
}